
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
	">
	
	<http  auto-config="true" use-expressions="true"  >
          <access-denied-handler error-page="/error/403" /> 

		  <intercept-url pattern="/client**" access="isAuthenticated()"  />
		  <intercept-url pattern="/user/list**" access="hasRole('READ_USER')"/>
		   <intercept-url pattern="/user/profile**" access="isAuthenticated()"/>
		   <intercept-url pattern="/user/delete**" access="hasRole('DELETE_USER')"/>
		     <intercept-url pattern="/user/create**" access="hasRole('WRITE_USER')"/>
		  <intercept-url pattern="/user/update**" access="hasRole('WRITE_USER')"/>
		  <!-- ProductSecurity -->
		  	  <intercept-url pattern="/product/list**" access="hasRole('READ_PRODUCT')"/>
		  	  <intercept-url pattern="/product/profile**" access="isAuthenticated()"/>
		  <intercept-url pattern="/product/delete" access="hasRole('DELETE_PRODUCT')"  />
		  <intercept-url pattern="/product/create" access="hasRole('WRITE_PRODUCT')"  />
		  <intercept-url pattern="/product/update" access="hasRole('WRITE_PRODUCT')" />
		  <intercept-url pattern="/category/list**" access="hasRole('READ_CATEGORY')"  />
		  <intercept-url pattern="/category/delete**" access="hasRole('DELETE_CATEGORY')"  />
		  <intercept-url pattern="/category/update**" access="hasRole('WRITE_CATEGORY')"  />
		  <intercept-url pattern="/category/create**" access="hasRole('WRITE_CATEGORY')"  />
		  <intercept-url pattern="/category/profile**" access="isAuthenticated()"  />
		  <!-- ProductSecurity -->
		  <!-- WarehouseSecurity -->
		  <intercept-url pattern="/warehouse/profile**" access="isAuthenticated()"  />
		  <intercept-url pattern="/warehouse/list**" access="hasRole('READ_WAREHOUSE')"/>
		  <intercept-url pattern="/warehouse/delete**" access="hasRole('DELETE_WAREHOUSE')"/>
		  <intercept-url pattern="/warehouse/update**" access="hasRole('WRITE_WAREHOUSE')"/>
		  <intercept-url pattern="/warehouse/create**" access="hasRole('WRITE_WAREHOUSE')"/>
		  <!-- WarehouseSecurity -->
		  <intercept-url pattern="/mouvement**" access="isAuthenticated()"  />
		  <intercept-url pattern="/mouvement/**" access="isAuthenticated()"  />
		  <!-- ManufacturingSecurity -->
		  <intercept-url pattern="/manufacturing/list**" access="hasRole('READ_MANUFACTURING')"/>
		  <intercept-url pattern="/manufacturing/delete**" access="hasRole('DELETE_MANUFACTURING')"  />
		  <intercept-url pattern="/manufacturing/create**" access="hasRole('WRITE_MANUFACTURING')"  />
		  <intercept-url pattern="/manufacturing/update**" access="hasRole('WRITE_MANUFACTURING')"  />
		  <intercept-url pattern="/manufacturing/profile**" access="isAuthenticated()"  />
		  <!-- ManufacturingSecurity -->
		  <!-- NomenclatureSecurity -->
		   <intercept-url pattern="/nomenclature/profile**" access="isAuthenticated()"  />
		   <intercept-url pattern="/nomenclature/list**" access="hasRole('READ_NOMENCLATURES')"/>
		   <intercept-url pattern="/nomenclature/delete**" access="hasRole('DELETE_NOMENCLATURES')"/>
		   <intercept-url pattern="/nomenclature/create**" access="hasRole('WRITE_NOMENCLATURES')"/>
		   <intercept-url pattern="/nomenclature/update**" access="hasRole('WRITE_NOMENCLATURES')"/>
		   <intercept-url pattern="/nomenclature/list**" access="hasRole('READ_NOMENCLATURES')"/>
		  <intercept-url pattern="/nomenclature/**" access="isAuthenticated()"  />
		  <!-- NomenclatureSecurity -->
		  <!-- GammeSecurity -->
		  <intercept-url pattern="/gamme/list**" access="hasRole('READ_GAMME')"  />
		  <intercept-url pattern="/gamme/profile**" access="isAuthenticated()"  />
		  <intercept-url pattern="/gamme/delete**" access="hasRole('DELETE_GAMME')"  />
		  <intercept-url pattern="/gamme/create**" access="hasRole('WRITE_GAMME')"  />
		  <intercept-url pattern="/gamme/update**" access="hasRole('WRITE_GAMME')"  />
          <!-- GammeSecurity -->
          <!-- RoleSecurity -->
		   <intercept-url pattern="/role/profile**" access="isAuthenticated()"  />
		  <intercept-url pattern="/role/create**" access="hasRole('WRITE_ROLE')"  />
		  <intercept-url pattern="/role/list**" access="hasRole('READ_ROLE')"  />
		  <intercept-url pattern="/role/update**" access="hasRole('WRITE_ROLE')"  />
		  <intercept-url pattern="/role/delete**" access="hasRole('DELETE_ROLE')"  />
		  <!-- ROLEnd -->
		   <intercept-url pattern="/poste**" access="isAuthenticated()"  />
		  <intercept-url pattern="/poste/**" access="isAuthenticated()"  />
		  <intercept-url pattern="/categoryPost**" access="isAuthenticated()"  />
		  <intercept-url pattern="/categoryPost/**" access="isAuthenticated()"  />
		  <intercept-url pattern="/dashboard**" access="isAuthenticated()"  />
		  <intercept-url pattern="/dashboard/**" access="isAuthenticated()"  />
		<form-login login-page="/login.html" 
		    default-target-url="/client.html"
			authentication-failure-url="/login.html?error=failed"
		    username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login.html?logout" />
		
	</http>	
	
	
	<beans:bean id="userDetailsService" class="ma.esoftech.esoftrade.serviceImpl.LoginService">
	</beans:bean>
	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>
    
	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>
<beans:bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> 
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="sha" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>